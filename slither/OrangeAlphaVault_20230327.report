slither flat/OrangeAlphaVaultFlat.sol > slither/OrangeAlphaVault_20230327.report
Compilation warnings/errors on flat/OrangeAlphaVaultFlat.sol:
Warning: Contract code size is 41044 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
    --> flat/OrangeAlphaVaultFlat.sol:4017:1:
     |
4017 | contract OrangeAlphaVault is IOrangeAlphaVault, IUniswapV3MintCallback, IUniswapV3SwapCallback, ERC20 {
     | ^ (Relevant source part starts here and spans across multiple lines).



FullMath.mulDiv(uint256,uint256,uint256) (flat/OrangeAlphaVaultFlat.sol#1569-1666) performs a multiplication on the result of a division:
	-denominator = denominator / twos (flat/OrangeAlphaVaultFlat.sol#1626)
	-inv = (3 * denominator) ^ 2 (flat/OrangeAlphaVaultFlat.sol#1646)
FullMath.mulDiv(uint256,uint256,uint256) (flat/OrangeAlphaVaultFlat.sol#1569-1666) performs a multiplication on the result of a division:
	-denominator = denominator / twos (flat/OrangeAlphaVaultFlat.sol#1626)
	-inv *= 2 - denominator * inv (flat/OrangeAlphaVaultFlat.sol#1650)
FullMath.mulDiv(uint256,uint256,uint256) (flat/OrangeAlphaVaultFlat.sol#1569-1666) performs a multiplication on the result of a division:
	-denominator = denominator / twos (flat/OrangeAlphaVaultFlat.sol#1626)
	-inv *= 2 - denominator * inv (flat/OrangeAlphaVaultFlat.sol#1651)
FullMath.mulDiv(uint256,uint256,uint256) (flat/OrangeAlphaVaultFlat.sol#1569-1666) performs a multiplication on the result of a division:
	-denominator = denominator / twos (flat/OrangeAlphaVaultFlat.sol#1626)
	-inv *= 2 - denominator * inv (flat/OrangeAlphaVaultFlat.sol#1652)
FullMath.mulDiv(uint256,uint256,uint256) (flat/OrangeAlphaVaultFlat.sol#1569-1666) performs a multiplication on the result of a division:
	-denominator = denominator / twos (flat/OrangeAlphaVaultFlat.sol#1626)
	-inv *= 2 - denominator * inv (flat/OrangeAlphaVaultFlat.sol#1653)
FullMath.mulDiv(uint256,uint256,uint256) (flat/OrangeAlphaVaultFlat.sol#1569-1666) performs a multiplication on the result of a division:
	-denominator = denominator / twos (flat/OrangeAlphaVaultFlat.sol#1626)
	-inv *= 2 - denominator * inv (flat/OrangeAlphaVaultFlat.sol#1654)
FullMath.mulDiv(uint256,uint256,uint256) (flat/OrangeAlphaVaultFlat.sol#1569-1666) performs a multiplication on the result of a division:
	-denominator = denominator / twos (flat/OrangeAlphaVaultFlat.sol#1626)
	-inv *= 2 - denominator * inv (flat/OrangeAlphaVaultFlat.sol#1655)
FullMath.mulDiv(uint256,uint256,uint256) (flat/OrangeAlphaVaultFlat.sol#1569-1666) performs a multiplication on the result of a division:
	-prod0 = prod0 / twos (flat/OrangeAlphaVaultFlat.sol#1631)
	-result = prod0 * inv (flat/OrangeAlphaVaultFlat.sol#1663)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

OrangeAlphaVault._executeHedgeRebalance(IOrangeAlphaVault.Positions,IOrangeAlphaVault.Positions,IOrangeAlphaVault.Ticks) (flat/OrangeAlphaVaultFlat.sol#4670-4747) uses a dangerous strict equality:
	- _currentPosition.collateralAmount1 == _targetPosition.collateralAmount1 || _currentPosition.debtAmount0 == _targetPosition.debtAmount0 (flat/OrangeAlphaVaultFlat.sol#4681-4682)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Reentrancy in OrangeAlphaVault.deposit(uint256,address,uint256) (flat/OrangeAlphaVaultFlat.sol#4286-4348):
	External calls:
	- token1.safeTransferFrom(msg.sender,address(this),_maxAssets) (flat/OrangeAlphaVaultFlat.sol#4296)
	State variables written after the call(s):
	- _mint(_receiver,_maxAssets) (flat/OrangeAlphaVaultFlat.sol#4297)
		- _totalSupply += amount (flat/OrangeAlphaVaultFlat.sol#2282)
Reentrancy in OrangeAlphaVault.deposit(uint256,address,uint256) (flat/OrangeAlphaVaultFlat.sol#4286-4348):
	External calls:
	- token1.safeTransferFrom(msg.sender,address(this),_maxAssets) (flat/OrangeAlphaVaultFlat.sol#4314)
	- aave.safeSupply(address(token1),_additionalPosition.collateralAmount1,address(this),AAVE_REFERRAL_NONE) (flat/OrangeAlphaVaultFlat.sol#4317)
	- aave.safeBorrow(address(token0),_additionalPosition.debtAmount0,AAVE_VARIABLE_INTEREST,AAVE_REFERRAL_NONE,address(this)) (flat/OrangeAlphaVaultFlat.sol#4318-4324)
	- _depositLiquidityByShares(_depositedBalances,_shares,_totalSupply,_ticks) (flat/OrangeAlphaVaultFlat.sol#4333)
		- pool.swap(address(this),_zeroForOne,SafeCast.toInt256(_swapAmount),_swapThresholdPrice,) (flat/OrangeAlphaVaultFlat.sol#4965)
		- (_token0Balance,_token1Balance) = pool.mint(address(this),_ticks.lowerTick,_ticks.upperTick,_additionalLiquidity,) (flat/OrangeAlphaVaultFlat.sol#4380-4386)
	- token0.safeTransfer(_receiver,_depositedBalances.balance0) (flat/OrangeAlphaVaultFlat.sol#4337)
	- token1.safeTransfer(_receiver,_depositedBalances.balance1) (flat/OrangeAlphaVaultFlat.sol#4340)
	State variables written after the call(s):
	- _mint(_receiver,_shares) (flat/OrangeAlphaVaultFlat.sol#4344)
		- _totalSupply += amount (flat/OrangeAlphaVaultFlat.sol#2282)
Reentrancy in OrangeAlphaVault.rebalance(int24,int24,int24,int24,uint256,uint128) (flat/OrangeAlphaVaultFlat.sol#4594-4666):
	External calls:
	- _burnAndCollectFees(_ticks.lowerTick,_ticks.upperTick,_liquidity) (flat/OrangeAlphaVaultFlat.sol#4614)
		- (burn0_,burn1_) = pool.burn(_lowerTick,_upperTick,_liquidity) (flat/OrangeAlphaVaultFlat.sol#4910)
		- pool.collect(address(this),_lowerTick,_upperTick,type()(uint128).max,type()(uint128).max) (flat/OrangeAlphaVaultFlat.sol#4913)
	State variables written after the call(s):
	- lowerTick = _newLowerTick (flat/OrangeAlphaVaultFlat.sol#4619)
	- upperTick = _newUpperTick (flat/OrangeAlphaVaultFlat.sol#4620)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

OrangeAlphaVault.redeem(uint256,address,address,uint256).amount1Delta_scope_0 (flat/OrangeAlphaVaultFlat.sol#4506) is a local variable never initialized
OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._amount0Delta_scope_0 (flat/OrangeAlphaVaultFlat.sol#4428) is a local variable never initialized
OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._surplusAmount1 (flat/OrangeAlphaVaultFlat.sol#4402) is a local variable never initialized
OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._surplusAmount0 (flat/OrangeAlphaVaultFlat.sol#4401) is a local variable never initialized
OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._amount1Delta_scope_1 (flat/OrangeAlphaVaultFlat.sol#4428) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

OrangeAlphaVault._addLiquidityInRebalance(int24,int24,uint256,uint256) (flat/OrangeAlphaVaultFlat.sol#4751-4795) ignores return value by pool.mint(address(this),_lowerTick,_upperTick,targetLiquidity_,) (flat/OrangeAlphaVaultFlat.sol#4793)
OrangeAlphaVault._burnAndCollectFees(int24,int24,uint128) (flat/OrangeAlphaVaultFlat.sol#4904-4914) ignores return value by pool.collect(address(this),_lowerTick,_upperTick,type()(uint128).max,type()(uint128).max) (flat/OrangeAlphaVaultFlat.sol#4913)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

IOrangeAlphaVault.pool().pool (flat/OrangeAlphaVaultFlat.sol#631) shadows:
	- IOrangeAlphaVault.pool() (flat/OrangeAlphaVaultFlat.sol#631) (function)
IOrangeAlphaVault.token1().token1 (flat/OrangeAlphaVaultFlat.sol#634) shadows:
	- IOrangeAlphaVault.token1() (flat/OrangeAlphaVaultFlat.sol#634) (function)
IOrangeAlphaParameters.minDepositAmount().minDepositAmount (flat/OrangeAlphaVaultFlat.sol#747) shadows:
	- IOrangeAlphaParameters.minDepositAmount() (flat/OrangeAlphaVaultFlat.sol#747) (function)
OrangeAlphaVault.constructor(string,string,address,address,address,address,address,address,address)._name (flat/OrangeAlphaVaultFlat.sol#4054) shadows:
	- ERC20._name (flat/OrangeAlphaVaultFlat.sol#2062) (state variable)
OrangeAlphaVault.constructor(string,string,address,address,address,address,address,address,address)._symbol (flat/OrangeAlphaVaultFlat.sol#4055) shadows:
	- ERC20._symbol (flat/OrangeAlphaVaultFlat.sol#2063) (state variable)
OrangeAlphaVault.deposit(uint256,address,uint256)._totalSupply (flat/OrangeAlphaVaultFlat.sol#4291) shadows:
	- ERC20._totalSupply (flat/OrangeAlphaVaultFlat.sol#2060) (state variable)
OrangeAlphaVault._depositLiquidityByShares(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._totalSupply (flat/OrangeAlphaVaultFlat.sol#4355) shadows:
	- ERC20._totalSupply (flat/OrangeAlphaVaultFlat.sol#2060) (state variable)
OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._balances (flat/OrangeAlphaVaultFlat.sol#4395) shadows:
	- ERC20._balances (flat/OrangeAlphaVaultFlat.sol#2056) (state variable)
OrangeAlphaVault.redeem(uint256,address,address,uint256)._totalSupply (flat/OrangeAlphaVaultFlat.sol#4453) shadows:
	- ERC20._totalSupply (flat/OrangeAlphaVaultFlat.sol#2060) (state variable)
OrangeAlphaVault._redeemLiqidityByShares(uint256,uint256,IOrangeAlphaVault.Ticks)._totalSupply (flat/OrangeAlphaVaultFlat.sol#4529) shadows:
	- ERC20._totalSupply (flat/OrangeAlphaVaultFlat.sol#2060) (state variable)
OrangeAlphaVault._computeTargetPositionByShares(uint256,uint256,uint256,uint256,uint256,uint256)._totalSupply (flat/OrangeAlphaVaultFlat.sol#4815) shadows:
	- ERC20._totalSupply (flat/OrangeAlphaVaultFlat.sol#2060) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

Variable 'OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._amount1Delta (flat/OrangeAlphaVaultFlat.sol#4418)' in OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks) (flat/OrangeAlphaVaultFlat.sol#4394-4439) potentially used before declaration: (_amount0Delta,_amount1Delta) = _swap(false,_surplusAmount1,_ticks.currentTick.getSqrtRatioAtTick()) (flat/OrangeAlphaVaultFlat.sol#4428-4432)
Variable 'OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._amount0Delta (flat/OrangeAlphaVaultFlat.sol#4418)' in OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks) (flat/OrangeAlphaVaultFlat.sol#4394-4439) potentially used before declaration: (_amount0Delta,_amount1Delta) = _swap(false,_surplusAmount1,_ticks.currentTick.getSqrtRatioAtTick()) (flat/OrangeAlphaVaultFlat.sol#4428-4432)
Variable 'OrangeAlphaVault.redeem(uint256,address,address,uint256).amount1Delta (flat/OrangeAlphaVaultFlat.sol#4486)' in OrangeAlphaVault.redeem(uint256,address,address,uint256) (flat/OrangeAlphaVaultFlat.sol#4442-4523) potentially used before declaration: (amount1Delta) = _swap(true,_redeemableBalances.balance0,_ticks.currentTick.getSqrtRatioAtTick()) (flat/OrangeAlphaVaultFlat.sol#4506-4510)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#pre-declaration-usage-of-local-variables

Reentrancy in OrangeAlphaVault.deposit(uint256,address,uint256) (flat/OrangeAlphaVaultFlat.sol#4286-4348):
	External calls:
	- token1.safeTransferFrom(msg.sender,address(this),_maxAssets) (flat/OrangeAlphaVaultFlat.sol#4296)
	State variables written after the call(s):
	- _mint(_receiver,_maxAssets) (flat/OrangeAlphaVaultFlat.sol#4297)
		- _balances[account] += amount (flat/OrangeAlphaVaultFlat.sol#2283)
Reentrancy in OrangeAlphaVault.deposit(uint256,address,uint256) (flat/OrangeAlphaVaultFlat.sol#4286-4348):
	External calls:
	- token1.safeTransferFrom(msg.sender,address(this),_maxAssets) (flat/OrangeAlphaVaultFlat.sol#4314)
	- aave.safeSupply(address(token1),_additionalPosition.collateralAmount1,address(this),AAVE_REFERRAL_NONE) (flat/OrangeAlphaVaultFlat.sol#4317)
	- aave.safeBorrow(address(token0),_additionalPosition.debtAmount0,AAVE_VARIABLE_INTEREST,AAVE_REFERRAL_NONE,address(this)) (flat/OrangeAlphaVaultFlat.sol#4318-4324)
	- _depositLiquidityByShares(_depositedBalances,_shares,_totalSupply,_ticks) (flat/OrangeAlphaVaultFlat.sol#4333)
		- pool.swap(address(this),_zeroForOne,SafeCast.toInt256(_swapAmount),_swapThresholdPrice,) (flat/OrangeAlphaVaultFlat.sol#4965)
		- (_token0Balance,_token1Balance) = pool.mint(address(this),_ticks.lowerTick,_ticks.upperTick,_additionalLiquidity,) (flat/OrangeAlphaVaultFlat.sol#4380-4386)
	- token0.safeTransfer(_receiver,_depositedBalances.balance0) (flat/OrangeAlphaVaultFlat.sol#4337)
	- token1.safeTransfer(_receiver,_depositedBalances.balance1) (flat/OrangeAlphaVaultFlat.sol#4340)
	State variables written after the call(s):
	- _mint(_receiver,_shares) (flat/OrangeAlphaVaultFlat.sol#4344)
		- _balances[account] += amount (flat/OrangeAlphaVaultFlat.sol#2283)
Reentrancy in OrangeAlphaVault.rebalance(int24,int24,int24,int24,uint256,uint128) (flat/OrangeAlphaVaultFlat.sol#4594-4666):
	External calls:
	- _burnAndCollectFees(_ticks.lowerTick,_ticks.upperTick,_liquidity) (flat/OrangeAlphaVaultFlat.sol#4614)
		- (burn0_,burn1_) = pool.burn(_lowerTick,_upperTick,_liquidity) (flat/OrangeAlphaVaultFlat.sol#4910)
		- pool.collect(address(this),_lowerTick,_upperTick,type()(uint128).max,type()(uint128).max) (flat/OrangeAlphaVaultFlat.sol#4913)
	State variables written after the call(s):
	- stoplossLowerTick = _newStoplossLowerTick (flat/OrangeAlphaVaultFlat.sol#4621)
	- stoplossUpperTick = _newStoplossUpperTick (flat/OrangeAlphaVaultFlat.sol#4622)
Reentrancy in OrangeAlphaVault.rebalance(int24,int24,int24,int24,uint256,uint128) (flat/OrangeAlphaVaultFlat.sol#4594-4666):
	External calls:
	- _burnAndCollectFees(_ticks.lowerTick,_ticks.upperTick,_liquidity) (flat/OrangeAlphaVaultFlat.sol#4614)
		- (burn0_,burn1_) = pool.burn(_lowerTick,_upperTick,_liquidity) (flat/OrangeAlphaVaultFlat.sol#4910)
		- pool.collect(address(this),_lowerTick,_upperTick,type()(uint128).max,type()(uint128).max) (flat/OrangeAlphaVaultFlat.sol#4913)
	- _executeHedgeRebalance(_currentPosition,_targetPosition,_ticks) (flat/OrangeAlphaVaultFlat.sol#4648)
		- pool.supply(asset,amount,onBehalfOf,referralCode) (flat/OrangeAlphaVaultFlat.sol#1228)
		- pool.borrow(asset,amount,interestRateMode,referralCode,onBehalfOf) (flat/OrangeAlphaVaultFlat.sol#1249)
		- amount != pool.repay(asset,amount,interestRateMode,onBehalfOf) (flat/OrangeAlphaVaultFlat.sol#1261)
		- amount != pool.withdraw(asset,amount,to) (flat/OrangeAlphaVaultFlat.sol#1234)
		- pool.swap(address(this),_zeroForOne,SafeCast.toInt256(_swapAmount),_swapThresholdPrice,) (flat/OrangeAlphaVaultFlat.sol#4965)
		- aave.safeSupply(address(token1),_supply,address(this),AAVE_REFERRAL_NONE) (flat/OrangeAlphaVaultFlat.sol#4702)
		- aave.safeBorrow(address(token0),_borrow,AAVE_VARIABLE_INTEREST,AAVE_REFERRAL_NONE,address(this)) (flat/OrangeAlphaVaultFlat.sol#4706)
		- aave.safeRepay(address(token0),_repay,AAVE_VARIABLE_INTEREST,address(this)) (flat/OrangeAlphaVaultFlat.sol#4720)
		- aave.safeSupply(address(token1),_supply_scope_0,address(this),AAVE_REFERRAL_NONE) (flat/OrangeAlphaVaultFlat.sol#4725)
		- aave.safeWithdraw(address(token1),_withdraw,address(this)) (flat/OrangeAlphaVaultFlat.sol#4729)
		- aave.safeBorrow(address(token0),_borrow_scope_1,AAVE_VARIABLE_INTEREST,AAVE_REFERRAL_NONE,address(this)) (flat/OrangeAlphaVaultFlat.sol#4734-4740)
		- aave.safeWithdraw(address(token1),_withdraw_scope_2,address(this)) (flat/OrangeAlphaVaultFlat.sol#4743)
	- _targetLiquidity = _addLiquidityInRebalance(_ticks.lowerTick,_ticks.upperTick,_targetPosition.token0Balance,_targetPosition.token1Balance) (flat/OrangeAlphaVaultFlat.sol#4651-4656)
		- pool.swap(address(this),_zeroForOne,SafeCast.toInt256(_swapAmount),_swapThresholdPrice,) (flat/OrangeAlphaVaultFlat.sol#4965)
		- pool.mint(address(this),_lowerTick,_upperTick,targetLiquidity_,) (flat/OrangeAlphaVaultFlat.sol#4793)
	State variables written after the call(s):
	- hasPosition = true (flat/OrangeAlphaVaultFlat.sol#4664)
Reentrancy in OrangeAlphaVault.stoploss(int24) (flat/OrangeAlphaVaultFlat.sol#4542-4591):
	External calls:
	- _burnAndCollectFees(_ticks.lowerTick,_ticks.upperTick,liquidity) (flat/OrangeAlphaVaultFlat.sol#4556)
		- (burn0_,burn1_) = pool.burn(_lowerTick,_upperTick,_liquidity) (flat/OrangeAlphaVaultFlat.sol#4910)
		- pool.collect(address(this),_lowerTick,_upperTick,type()(uint128).max,type()(uint128).max) (flat/OrangeAlphaVaultFlat.sol#4913)
	- _swapAmountOut(false,uint128(_repayingDebt - _balanceToken0),_ticks.currentTick) (flat/OrangeAlphaVaultFlat.sol#4563-4567)
		- pool.swap(address(this),_zeroForOne,SafeCast.toInt256(_swapAmount),_swapThresholdPrice,) (flat/OrangeAlphaVaultFlat.sol#4965)
	- aave.safeRepay(address(token0),_repayingDebt,AAVE_VARIABLE_INTEREST,address(this)) (flat/OrangeAlphaVaultFlat.sol#4572)
	- aave.safeWithdraw(address(token1),_withdrawingCollateral,address(this)) (flat/OrangeAlphaVaultFlat.sol#4576)
	- _swap(true,_balanceToken0,_ticks.currentTick.getSqrtRatioAtTick()) (flat/OrangeAlphaVaultFlat.sol#4581-4585)
		- pool.swap(address(this),_zeroForOne,SafeCast.toInt256(_swapAmount),_swapThresholdPrice,) (flat/OrangeAlphaVaultFlat.sol#4965)
	State variables written after the call(s):
	- hasPosition = false (flat/OrangeAlphaVaultFlat.sol#4590)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in OrangeAlphaVault.deposit(uint256,address,uint256) (flat/OrangeAlphaVaultFlat.sol#4286-4348):
	External calls:
	- token1.safeTransferFrom(msg.sender,address(this),_maxAssets) (flat/OrangeAlphaVaultFlat.sol#4296)
	Event emitted after the call(s):
	- Transfer(address(0),account,amount) (flat/OrangeAlphaVaultFlat.sol#2284)
		- _mint(_receiver,_maxAssets) (flat/OrangeAlphaVaultFlat.sol#4297)
Reentrancy in OrangeAlphaVault.deposit(uint256,address,uint256) (flat/OrangeAlphaVaultFlat.sol#4286-4348):
	External calls:
	- token1.safeTransferFrom(msg.sender,address(this),_maxAssets) (flat/OrangeAlphaVaultFlat.sol#4314)
	- aave.safeSupply(address(token1),_additionalPosition.collateralAmount1,address(this),AAVE_REFERRAL_NONE) (flat/OrangeAlphaVaultFlat.sol#4317)
	- aave.safeBorrow(address(token0),_additionalPosition.debtAmount0,AAVE_VARIABLE_INTEREST,AAVE_REFERRAL_NONE,address(this)) (flat/OrangeAlphaVaultFlat.sol#4318-4324)
	- _depositLiquidityByShares(_depositedBalances,_shares,_totalSupply,_ticks) (flat/OrangeAlphaVaultFlat.sol#4333)
		- pool.swap(address(this),_zeroForOne,SafeCast.toInt256(_swapAmount),_swapThresholdPrice,) (flat/OrangeAlphaVaultFlat.sol#4965)
		- (_token0Balance,_token1Balance) = pool.mint(address(this),_ticks.lowerTick,_ticks.upperTick,_additionalLiquidity,) (flat/OrangeAlphaVaultFlat.sol#4380-4386)
	- token0.safeTransfer(_receiver,_depositedBalances.balance0) (flat/OrangeAlphaVaultFlat.sol#4337)
	- token1.safeTransfer(_receiver,_depositedBalances.balance1) (flat/OrangeAlphaVaultFlat.sol#4340)
	Event emitted after the call(s):
	- Action(_actionType,msg.sender,_totalAssets(_ticks),totalSupply()) (flat/OrangeAlphaVaultFlat.sol#4803)
		- _emitAction(ActionType.DEPOSIT,_ticks) (flat/OrangeAlphaVaultFlat.sol#4346)
	- Transfer(address(0),account,amount) (flat/OrangeAlphaVaultFlat.sol#2284)
		- _mint(_receiver,_shares) (flat/OrangeAlphaVaultFlat.sol#4344)
Reentrancy in OrangeAlphaVault.rebalance(int24,int24,int24,int24,uint256,uint128) (flat/OrangeAlphaVaultFlat.sol#4594-4666):
	External calls:
	- _burnAndCollectFees(_ticks.lowerTick,_ticks.upperTick,_liquidity) (flat/OrangeAlphaVaultFlat.sol#4614)
		- (burn0_,burn1_) = pool.burn(_lowerTick,_upperTick,_liquidity) (flat/OrangeAlphaVaultFlat.sol#4910)
		- pool.collect(address(this),_lowerTick,_upperTick,type()(uint128).max,type()(uint128).max) (flat/OrangeAlphaVaultFlat.sol#4913)
	- _executeHedgeRebalance(_currentPosition,_targetPosition,_ticks) (flat/OrangeAlphaVaultFlat.sol#4648)
		- pool.supply(asset,amount,onBehalfOf,referralCode) (flat/OrangeAlphaVaultFlat.sol#1228)
		- pool.borrow(asset,amount,interestRateMode,referralCode,onBehalfOf) (flat/OrangeAlphaVaultFlat.sol#1249)
		- amount != pool.repay(asset,amount,interestRateMode,onBehalfOf) (flat/OrangeAlphaVaultFlat.sol#1261)
		- amount != pool.withdraw(asset,amount,to) (flat/OrangeAlphaVaultFlat.sol#1234)
		- pool.swap(address(this),_zeroForOne,SafeCast.toInt256(_swapAmount),_swapThresholdPrice,) (flat/OrangeAlphaVaultFlat.sol#4965)
		- aave.safeSupply(address(token1),_supply,address(this),AAVE_REFERRAL_NONE) (flat/OrangeAlphaVaultFlat.sol#4702)
		- aave.safeBorrow(address(token0),_borrow,AAVE_VARIABLE_INTEREST,AAVE_REFERRAL_NONE,address(this)) (flat/OrangeAlphaVaultFlat.sol#4706)
		- aave.safeRepay(address(token0),_repay,AAVE_VARIABLE_INTEREST,address(this)) (flat/OrangeAlphaVaultFlat.sol#4720)
		- aave.safeSupply(address(token1),_supply_scope_0,address(this),AAVE_REFERRAL_NONE) (flat/OrangeAlphaVaultFlat.sol#4725)
		- aave.safeWithdraw(address(token1),_withdraw,address(this)) (flat/OrangeAlphaVaultFlat.sol#4729)
		- aave.safeBorrow(address(token0),_borrow_scope_1,AAVE_VARIABLE_INTEREST,AAVE_REFERRAL_NONE,address(this)) (flat/OrangeAlphaVaultFlat.sol#4734-4740)
		- aave.safeWithdraw(address(token1),_withdraw_scope_2,address(this)) (flat/OrangeAlphaVaultFlat.sol#4743)
	- _targetLiquidity = _addLiquidityInRebalance(_ticks.lowerTick,_ticks.upperTick,_targetPosition.token0Balance,_targetPosition.token1Balance) (flat/OrangeAlphaVaultFlat.sol#4651-4656)
		- pool.swap(address(this),_zeroForOne,SafeCast.toInt256(_swapAmount),_swapThresholdPrice,) (flat/OrangeAlphaVaultFlat.sol#4965)
		- pool.mint(address(this),_lowerTick,_upperTick,targetLiquidity_,) (flat/OrangeAlphaVaultFlat.sol#4793)
	Event emitted after the call(s):
	- Action(_actionType,msg.sender,_totalAssets(_ticks),totalSupply()) (flat/OrangeAlphaVaultFlat.sol#4803)
		- _emitAction(ActionType.REBALANCE,_ticks) (flat/OrangeAlphaVaultFlat.sol#4661)
Reentrancy in OrangeAlphaVault.redeem(uint256,address,address,uint256) (flat/OrangeAlphaVaultFlat.sol#4442-4523):
	External calls:
	- (_burnedLiquidityAmount0,_burnedLiquidityAmount1) = _redeemLiqidityByShares(_shares,_totalSupply,_ticks) (flat/OrangeAlphaVaultFlat.sol#4460-4464)
		- (burn0_,burn1_) = pool.burn(_lowerTick,_upperTick,_liquidity) (flat/OrangeAlphaVaultFlat.sol#4910)
		- pool.collect(address(this),_lowerTick,_upperTick,type()(uint128).max,type()(uint128).max) (flat/OrangeAlphaVaultFlat.sol#4913)
	- (amount0Delta,amount1Delta) = _swapAmountOut(false,uint128(_redeemPosition.debtAmount0 - _redeemableBalances.balance0),_ticks.currentTick) (flat/OrangeAlphaVaultFlat.sol#4486-4490)
		- pool.swap(address(this),_zeroForOne,SafeCast.toInt256(_swapAmount),_swapThresholdPrice,) (flat/OrangeAlphaVaultFlat.sol#4965)
	- aave.safeRepay(address(token0),_redeemPosition.debtAmount0,AAVE_VARIABLE_INTEREST,address(this)) (flat/OrangeAlphaVaultFlat.sol#4497)
	- aave.safeWithdraw(address(token1),_redeemPosition.collateralAmount1,address(this)) (flat/OrangeAlphaVaultFlat.sol#4501)
	- (amount1Delta) = _swap(true,_redeemableBalances.balance0,_ticks.currentTick.getSqrtRatioAtTick()) (flat/OrangeAlphaVaultFlat.sol#4506-4510)
		- pool.swap(address(this),_zeroForOne,SafeCast.toInt256(_swapAmount),_swapThresholdPrice,) (flat/OrangeAlphaVaultFlat.sol#4965)
	- token1.safeTransfer(_receiver,_redeemableBalances.balance1) (flat/OrangeAlphaVaultFlat.sol#4519)
	Event emitted after the call(s):
	- Action(_actionType,msg.sender,_totalAssets(_ticks),totalSupply()) (flat/OrangeAlphaVaultFlat.sol#4803)
		- _emitAction(ActionType.REDEEM,_ticks) (flat/OrangeAlphaVaultFlat.sol#4521)
Reentrancy in OrangeAlphaVault.stoploss(int24) (flat/OrangeAlphaVaultFlat.sol#4542-4591):
	External calls:
	- _burnAndCollectFees(_ticks.lowerTick,_ticks.upperTick,liquidity) (flat/OrangeAlphaVaultFlat.sol#4556)
		- (burn0_,burn1_) = pool.burn(_lowerTick,_upperTick,_liquidity) (flat/OrangeAlphaVaultFlat.sol#4910)
		- pool.collect(address(this),_lowerTick,_upperTick,type()(uint128).max,type()(uint128).max) (flat/OrangeAlphaVaultFlat.sol#4913)
	- _swapAmountOut(false,uint128(_repayingDebt - _balanceToken0),_ticks.currentTick) (flat/OrangeAlphaVaultFlat.sol#4563-4567)
		- pool.swap(address(this),_zeroForOne,SafeCast.toInt256(_swapAmount),_swapThresholdPrice,) (flat/OrangeAlphaVaultFlat.sol#4965)
	- aave.safeRepay(address(token0),_repayingDebt,AAVE_VARIABLE_INTEREST,address(this)) (flat/OrangeAlphaVaultFlat.sol#4572)
	- aave.safeWithdraw(address(token1),_withdrawingCollateral,address(this)) (flat/OrangeAlphaVaultFlat.sol#4576)
	- _swap(true,_balanceToken0,_ticks.currentTick.getSqrtRatioAtTick()) (flat/OrangeAlphaVaultFlat.sol#4581-4585)
		- pool.swap(address(this),_zeroForOne,SafeCast.toInt256(_swapAmount),_swapThresholdPrice,) (flat/OrangeAlphaVaultFlat.sol#4965)
	Event emitted after the call(s):
	- Action(_actionType,msg.sender,_totalAssets(_ticks),totalSupply()) (flat/OrangeAlphaVaultFlat.sol#4803)
		- _emitAction(ActionType.STOPLOSS,_ticks) (flat/OrangeAlphaVaultFlat.sol#4589)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

TickMath.getTickAtSqrtRatio(uint160) (flat/OrangeAlphaVaultFlat.sol#1391-1551) uses assembly
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1406-1410)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1411-1415)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1416-1420)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1421-1425)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1426-1430)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1431-1435)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1436-1440)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1441-1444)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1451-1456)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1457-1462)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1463-1468)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1469-1474)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1475-1480)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1481-1486)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1487-1492)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1493-1498)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1499-1504)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1505-1510)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1511-1516)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1517-1522)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1523-1528)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1529-1533)
FullMath.mulDiv(uint256,uint256,uint256) (flat/OrangeAlphaVaultFlat.sol#1569-1666) uses assembly
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1582-1586)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1591-1593)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1608-1610)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1612-1615)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1625-1627)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1630-1632)
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#1636-1638)
Address.verifyCallResult(bool,bytes,string) (flat/OrangeAlphaVaultFlat.sol#3790-3810) uses assembly
	- INLINE ASM (flat/OrangeAlphaVaultFlat.sol#3802-3805)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Different versions of Solidity are used:
	- Version used: ['0.8.16', '>=0.4.0', '>=0.5.0', '>=0.8.0', '^0.8.0', '^0.8.1', '^0.8.16']
	- >=0.5.0 (flat/OrangeAlphaVaultFlat.sol#6)
	- >=0.5.0 (flat/OrangeAlphaVaultFlat.sol#125)
	- >=0.5.0 (flat/OrangeAlphaVaultFlat.sol#168)
	- >=0.5.0 (flat/OrangeAlphaVaultFlat.sol#206)
	- >=0.5.0 (flat/OrangeAlphaVaultFlat.sol#312)
	- >=0.5.0 (flat/OrangeAlphaVaultFlat.sol#436)
	- >=0.5.0 (flat/OrangeAlphaVaultFlat.sol#462)
	- ^0.8.0 (flat/OrangeAlphaVaultFlat.sol#489)
	- ^0.8.0 (flat/OrangeAlphaVaultFlat.sol#572)
	- ^0.8.0 (flat/OrangeAlphaVaultFlat.sol#737)
	- 0.8.16 (flat/OrangeAlphaVaultFlat.sol#784)
	- ^0.8.0 (flat/OrangeAlphaVaultFlat.sol#1056)
	- ^0.8.16 (flat/OrangeAlphaVaultFlat.sol#1210)
	- ^0.8.16 (flat/OrangeAlphaVaultFlat.sol#1271)
	- 0.8.16 (flat/OrangeAlphaVaultFlat.sol#1300)
	- ^0.8.16 (flat/OrangeAlphaVaultFlat.sol#1557)
	- >=0.4.0 (flat/OrangeAlphaVaultFlat.sol#1689)
	- >=0.8.0 (flat/OrangeAlphaVaultFlat.sol#1702)
	- 0.8.16 (flat/OrangeAlphaVaultFlat.sol#1877)
	- ^0.8.0 (flat/OrangeAlphaVaultFlat.sol#1970)
	- ^0.8.0 (flat/OrangeAlphaVaultFlat.sol#1997)
	- ^0.8.0 (flat/OrangeAlphaVaultFlat.sol#2026)
	- ^0.8.0 (flat/OrangeAlphaVaultFlat.sol#2410)
	- >=0.5.0 (flat/OrangeAlphaVaultFlat.sol#3546)
	- >=0.5.0 (flat/OrangeAlphaVaultFlat.sol#3570)
	- ^0.8.1 (flat/OrangeAlphaVaultFlat.sol#3593)
	- ^0.8.0 (flat/OrangeAlphaVaultFlat.sol#3818)
	- ^0.8.0 (flat/OrangeAlphaVaultFlat.sol#3881)
	- 0.8.16 (flat/OrangeAlphaVaultFlat.sol#3996)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used

Address.functionCall(address,bytes) (flat/OrangeAlphaVaultFlat.sol#3674-3676) is never used and should be removed
Address.functionCallWithValue(address,bytes,uint256) (flat/OrangeAlphaVaultFlat.sol#3703-3709) is never used and should be removed
Address.functionDelegateCall(address,bytes) (flat/OrangeAlphaVaultFlat.sol#3763-3765) is never used and should be removed
Address.functionDelegateCall(address,bytes,string) (flat/OrangeAlphaVaultFlat.sol#3773-3782) is never used and should be removed
Address.functionStaticCall(address,bytes) (flat/OrangeAlphaVaultFlat.sol#3736-3738) is never used and should be removed
Address.functionStaticCall(address,bytes,string) (flat/OrangeAlphaVaultFlat.sol#3746-3755) is never used and should be removed
Address.sendValue(address,uint256) (flat/OrangeAlphaVaultFlat.sol#3649-3654) is never used and should be removed
Context._msgData() (flat/OrangeAlphaVaultFlat.sol#1987-1989) is never used and should be removed
FullMath.mulDivRoundingUp(uint256,uint256,uint256) (flat/OrangeAlphaVaultFlat.sol#1673-1683) is never used and should be removed
OracleLibrary.consult(IUniswapV3Pool,uint32) (flat/OrangeAlphaVaultFlat.sol#1889-1914) is never used and should be removed
OracleLibrary.getChainedPrice(address[],int24[]) (flat/OrangeAlphaVaultFlat.sol#1950-1961) is never used and should be removed
SafeCast.toInt104(int256) (flat/OrangeAlphaVaultFlat.sol#3306-3309) is never used and should be removed
SafeCast.toInt112(int256) (flat/OrangeAlphaVaultFlat.sol#3288-3291) is never used and should be removed
SafeCast.toInt120(int256) (flat/OrangeAlphaVaultFlat.sol#3270-3273) is never used and should be removed
SafeCast.toInt128(int256) (flat/OrangeAlphaVaultFlat.sol#3252-3255) is never used and should be removed
SafeCast.toInt136(int256) (flat/OrangeAlphaVaultFlat.sol#3234-3237) is never used and should be removed
SafeCast.toInt144(int256) (flat/OrangeAlphaVaultFlat.sol#3216-3219) is never used and should be removed
SafeCast.toInt152(int256) (flat/OrangeAlphaVaultFlat.sol#3198-3201) is never used and should be removed
SafeCast.toInt16(int256) (flat/OrangeAlphaVaultFlat.sol#3504-3507) is never used and should be removed
SafeCast.toInt160(int256) (flat/OrangeAlphaVaultFlat.sol#3180-3183) is never used and should be removed
SafeCast.toInt168(int256) (flat/OrangeAlphaVaultFlat.sol#3162-3165) is never used and should be removed
SafeCast.toInt176(int256) (flat/OrangeAlphaVaultFlat.sol#3144-3147) is never used and should be removed
SafeCast.toInt184(int256) (flat/OrangeAlphaVaultFlat.sol#3126-3129) is never used and should be removed
SafeCast.toInt192(int256) (flat/OrangeAlphaVaultFlat.sol#3108-3111) is never used and should be removed
SafeCast.toInt200(int256) (flat/OrangeAlphaVaultFlat.sol#3090-3093) is never used and should be removed
SafeCast.toInt208(int256) (flat/OrangeAlphaVaultFlat.sol#3072-3075) is never used and should be removed
SafeCast.toInt216(int256) (flat/OrangeAlphaVaultFlat.sol#3054-3057) is never used and should be removed
SafeCast.toInt224(int256) (flat/OrangeAlphaVaultFlat.sol#3036-3039) is never used and should be removed
SafeCast.toInt232(int256) (flat/OrangeAlphaVaultFlat.sol#3018-3021) is never used and should be removed
SafeCast.toInt24(int256) (flat/OrangeAlphaVaultFlat.sol#3486-3489) is never used and should be removed
SafeCast.toInt240(int256) (flat/OrangeAlphaVaultFlat.sol#3000-3003) is never used and should be removed
SafeCast.toInt248(int256) (flat/OrangeAlphaVaultFlat.sol#2982-2985) is never used and should be removed
SafeCast.toInt32(int256) (flat/OrangeAlphaVaultFlat.sol#3468-3471) is never used and should be removed
SafeCast.toInt40(int256) (flat/OrangeAlphaVaultFlat.sol#3450-3453) is never used and should be removed
SafeCast.toInt48(int256) (flat/OrangeAlphaVaultFlat.sol#3432-3435) is never used and should be removed
SafeCast.toInt56(int256) (flat/OrangeAlphaVaultFlat.sol#3414-3417) is never used and should be removed
SafeCast.toInt64(int256) (flat/OrangeAlphaVaultFlat.sol#3396-3399) is never used and should be removed
SafeCast.toInt72(int256) (flat/OrangeAlphaVaultFlat.sol#3378-3381) is never used and should be removed
SafeCast.toInt8(int256) (flat/OrangeAlphaVaultFlat.sol#3522-3525) is never used and should be removed
SafeCast.toInt80(int256) (flat/OrangeAlphaVaultFlat.sol#3360-3363) is never used and should be removed
SafeCast.toInt88(int256) (flat/OrangeAlphaVaultFlat.sol#3342-3345) is never used and should be removed
SafeCast.toInt96(int256) (flat/OrangeAlphaVaultFlat.sol#3324-3327) is never used and should be removed
SafeCast.toUint104(uint256) (flat/OrangeAlphaVaultFlat.sol#2746-2749) is never used and should be removed
SafeCast.toUint112(uint256) (flat/OrangeAlphaVaultFlat.sol#2729-2732) is never used and should be removed
SafeCast.toUint120(uint256) (flat/OrangeAlphaVaultFlat.sol#2712-2715) is never used and should be removed
SafeCast.toUint136(uint256) (flat/OrangeAlphaVaultFlat.sol#2678-2681) is never used and should be removed
SafeCast.toUint144(uint256) (flat/OrangeAlphaVaultFlat.sol#2661-2664) is never used and should be removed
SafeCast.toUint152(uint256) (flat/OrangeAlphaVaultFlat.sol#2644-2647) is never used and should be removed
SafeCast.toUint16(uint256) (flat/OrangeAlphaVaultFlat.sol#2933-2936) is never used and should be removed
SafeCast.toUint160(uint256) (flat/OrangeAlphaVaultFlat.sol#2627-2630) is never used and should be removed
SafeCast.toUint168(uint256) (flat/OrangeAlphaVaultFlat.sol#2610-2613) is never used and should be removed
SafeCast.toUint176(uint256) (flat/OrangeAlphaVaultFlat.sol#2593-2596) is never used and should be removed
SafeCast.toUint184(uint256) (flat/OrangeAlphaVaultFlat.sol#2576-2579) is never used and should be removed
SafeCast.toUint192(uint256) (flat/OrangeAlphaVaultFlat.sol#2559-2562) is never used and should be removed
SafeCast.toUint200(uint256) (flat/OrangeAlphaVaultFlat.sol#2542-2545) is never used and should be removed
SafeCast.toUint208(uint256) (flat/OrangeAlphaVaultFlat.sol#2525-2528) is never used and should be removed
SafeCast.toUint216(uint256) (flat/OrangeAlphaVaultFlat.sol#2508-2511) is never used and should be removed
SafeCast.toUint224(uint256) (flat/OrangeAlphaVaultFlat.sol#2491-2494) is never used and should be removed
SafeCast.toUint232(uint256) (flat/OrangeAlphaVaultFlat.sol#2474-2477) is never used and should be removed
SafeCast.toUint24(uint256) (flat/OrangeAlphaVaultFlat.sol#2916-2919) is never used and should be removed
SafeCast.toUint240(uint256) (flat/OrangeAlphaVaultFlat.sol#2457-2460) is never used and should be removed
SafeCast.toUint248(uint256) (flat/OrangeAlphaVaultFlat.sol#2440-2443) is never used and should be removed
SafeCast.toUint256(int256) (flat/OrangeAlphaVaultFlat.sol#2964-2967) is never used and should be removed
SafeCast.toUint32(uint256) (flat/OrangeAlphaVaultFlat.sol#2899-2902) is never used and should be removed
SafeCast.toUint40(uint256) (flat/OrangeAlphaVaultFlat.sol#2882-2885) is never used and should be removed
SafeCast.toUint48(uint256) (flat/OrangeAlphaVaultFlat.sol#2865-2868) is never used and should be removed
SafeCast.toUint56(uint256) (flat/OrangeAlphaVaultFlat.sol#2848-2851) is never used and should be removed
SafeCast.toUint64(uint256) (flat/OrangeAlphaVaultFlat.sol#2831-2834) is never used and should be removed
SafeCast.toUint72(uint256) (flat/OrangeAlphaVaultFlat.sol#2814-2817) is never used and should be removed
SafeCast.toUint8(uint256) (flat/OrangeAlphaVaultFlat.sol#2950-2953) is never used and should be removed
SafeCast.toUint80(uint256) (flat/OrangeAlphaVaultFlat.sol#2797-2800) is never used and should be removed
SafeCast.toUint88(uint256) (flat/OrangeAlphaVaultFlat.sol#2780-2783) is never used and should be removed
SafeCast.toUint96(uint256) (flat/OrangeAlphaVaultFlat.sol#2763-2766) is never used and should be removed
SafeERC20.safeDecreaseAllowance(IERC20,address,uint256) (flat/OrangeAlphaVaultFlat.sol#3945-3956) is never used and should be removed
SafeERC20.safeIncreaseAllowance(IERC20,address,uint256) (flat/OrangeAlphaVaultFlat.sol#3936-3943) is never used and should be removed
SafeERC20.safePermit(IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32) (flat/OrangeAlphaVaultFlat.sol#3958-3972) is never used and should be removed
TickMath.getTickAtSqrtRatio(uint160) (flat/OrangeAlphaVaultFlat.sol#1391-1551) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Pragma version>=0.5.0 (flat/OrangeAlphaVaultFlat.sol#6) allows old versions
Pragma version>=0.5.0 (flat/OrangeAlphaVaultFlat.sol#125) allows old versions
Pragma version>=0.5.0 (flat/OrangeAlphaVaultFlat.sol#168) allows old versions
Pragma version>=0.5.0 (flat/OrangeAlphaVaultFlat.sol#206) allows old versions
Pragma version>=0.5.0 (flat/OrangeAlphaVaultFlat.sol#312) allows old versions
Pragma version>=0.5.0 (flat/OrangeAlphaVaultFlat.sol#436) allows old versions
Pragma version>=0.5.0 (flat/OrangeAlphaVaultFlat.sol#462) allows old versions
Pragma version^0.8.0 (flat/OrangeAlphaVaultFlat.sol#489) allows old versions
Pragma version^0.8.0 (flat/OrangeAlphaVaultFlat.sol#572) allows old versions
Pragma version^0.8.0 (flat/OrangeAlphaVaultFlat.sol#737) allows old versions
Pragma version0.8.16 (flat/OrangeAlphaVaultFlat.sol#784) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6/0.8.7
Pragma version^0.8.0 (flat/OrangeAlphaVaultFlat.sol#1056) allows old versions
Pragma version^0.8.16 (flat/OrangeAlphaVaultFlat.sol#1210) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6/0.8.7
Pragma version^0.8.16 (flat/OrangeAlphaVaultFlat.sol#1271) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6/0.8.7
Pragma version0.8.16 (flat/OrangeAlphaVaultFlat.sol#1300) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6/0.8.7
Pragma version^0.8.16 (flat/OrangeAlphaVaultFlat.sol#1557) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6/0.8.7
Pragma version>=0.4.0 (flat/OrangeAlphaVaultFlat.sol#1689) allows old versions
Pragma version>=0.8.0 (flat/OrangeAlphaVaultFlat.sol#1702) allows old versions
Pragma version0.8.16 (flat/OrangeAlphaVaultFlat.sol#1877) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6/0.8.7
Pragma version^0.8.0 (flat/OrangeAlphaVaultFlat.sol#1970) allows old versions
Pragma version^0.8.0 (flat/OrangeAlphaVaultFlat.sol#1997) allows old versions
Pragma version^0.8.0 (flat/OrangeAlphaVaultFlat.sol#2026) allows old versions
Pragma version^0.8.0 (flat/OrangeAlphaVaultFlat.sol#2410) allows old versions
Pragma version>=0.5.0 (flat/OrangeAlphaVaultFlat.sol#3546) allows old versions
Pragma version>=0.5.0 (flat/OrangeAlphaVaultFlat.sol#3570) allows old versions
Pragma version^0.8.1 (flat/OrangeAlphaVaultFlat.sol#3593) allows old versions
Pragma version^0.8.0 (flat/OrangeAlphaVaultFlat.sol#3818) allows old versions
Pragma version^0.8.0 (flat/OrangeAlphaVaultFlat.sol#3881) allows old versions
Pragma version0.8.16 (flat/OrangeAlphaVaultFlat.sol#3996) necessitates a version too recent to be trusted. Consider deploying with 0.6.12/0.7.6/0.8.7
solc-0.8.16 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (flat/OrangeAlphaVaultFlat.sol#3649-3654):
	- (success) = recipient.call{value: amount}() (flat/OrangeAlphaVaultFlat.sol#3652)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (flat/OrangeAlphaVaultFlat.sol#3717-3728):
	- (success,returndata) = target.call{value: value}(data) (flat/OrangeAlphaVaultFlat.sol#3726)
Low level call in Address.functionStaticCall(address,bytes,string) (flat/OrangeAlphaVaultFlat.sol#3746-3755):
	- (success,returndata) = target.staticcall(data) (flat/OrangeAlphaVaultFlat.sol#3753)
Low level call in Address.functionDelegateCall(address,bytes,string) (flat/OrangeAlphaVaultFlat.sol#3773-3782):
	- (success,returndata) = target.delegatecall(data) (flat/OrangeAlphaVaultFlat.sol#3780)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function IERC20Permit.DOMAIN_SEPARATOR() (flat/OrangeAlphaVaultFlat.sol#3873) is not in mixedCase
Parameter OrangeAlphaVault.convertToShares(uint256)._assets (flat/OrangeAlphaVaultFlat.sol#4088) is not in mixedCase
Parameter OrangeAlphaVault.convertToAssets(uint256)._shares (flat/OrangeAlphaVaultFlat.sol#4094) is not in mixedCase
Parameter OrangeAlphaVault.getRebalancedLiquidity(int24,int24,int24,int24,uint256)._newLowerTick (flat/OrangeAlphaVaultFlat.sol#4195) is not in mixedCase
Parameter OrangeAlphaVault.getRebalancedLiquidity(int24,int24,int24,int24,uint256)._newUpperTick (flat/OrangeAlphaVaultFlat.sol#4196) is not in mixedCase
Parameter OrangeAlphaVault.getRebalancedLiquidity(int24,int24,int24,int24,uint256)._newStoplossUpperTick (flat/OrangeAlphaVaultFlat.sol#4198) is not in mixedCase
Parameter OrangeAlphaVault.getRebalancedLiquidity(int24,int24,int24,int24,uint256)._hedgeRatio (flat/OrangeAlphaVaultFlat.sol#4199) is not in mixedCase
Parameter OrangeAlphaVault.deposit(uint256,address,uint256)._shares (flat/OrangeAlphaVaultFlat.sol#4286) is not in mixedCase
Parameter OrangeAlphaVault.deposit(uint256,address,uint256)._receiver (flat/OrangeAlphaVaultFlat.sol#4286) is not in mixedCase
Parameter OrangeAlphaVault.deposit(uint256,address,uint256)._maxAssets (flat/OrangeAlphaVaultFlat.sol#4286) is not in mixedCase
Parameter OrangeAlphaVault.redeem(uint256,address,address,uint256)._shares (flat/OrangeAlphaVaultFlat.sol#4443) is not in mixedCase
Parameter OrangeAlphaVault.redeem(uint256,address,address,uint256)._receiver (flat/OrangeAlphaVaultFlat.sol#4444) is not in mixedCase
Parameter OrangeAlphaVault.redeem(uint256,address,address,uint256)._minAssets (flat/OrangeAlphaVaultFlat.sol#4446) is not in mixedCase
Parameter OrangeAlphaVault.stoploss(int24)._inputTick (flat/OrangeAlphaVaultFlat.sol#4542) is not in mixedCase
Parameter OrangeAlphaVault.rebalance(int24,int24,int24,int24,uint256,uint128)._newLowerTick (flat/OrangeAlphaVaultFlat.sol#4595) is not in mixedCase
Parameter OrangeAlphaVault.rebalance(int24,int24,int24,int24,uint256,uint128)._newUpperTick (flat/OrangeAlphaVaultFlat.sol#4596) is not in mixedCase
Parameter OrangeAlphaVault.rebalance(int24,int24,int24,int24,uint256,uint128)._newStoplossLowerTick (flat/OrangeAlphaVaultFlat.sol#4597) is not in mixedCase
Parameter OrangeAlphaVault.rebalance(int24,int24,int24,int24,uint256,uint128)._newStoplossUpperTick (flat/OrangeAlphaVaultFlat.sol#4598) is not in mixedCase
Parameter OrangeAlphaVault.rebalance(int24,int24,int24,int24,uint256,uint128)._hedgeRatio (flat/OrangeAlphaVaultFlat.sol#4599) is not in mixedCase
Parameter OrangeAlphaVault.rebalance(int24,int24,int24,int24,uint256,uint128)._minNewLiquidity (flat/OrangeAlphaVaultFlat.sol#4600) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Variable IUniswapV3PoolState.positions(bytes32).feeGrowthInside0LastX128 (flat/OrangeAlphaVaultFlat.sol#97) is too similar to IUniswapV3PoolState.positions(bytes32).feeGrowthInside1LastX128 (flat/OrangeAlphaVaultFlat.sol#98)
Variable IUniswapV3PoolState.ticks(int24).feeGrowthOutside0X128 (flat/OrangeAlphaVaultFlat.sol#74) is too similar to IUniswapV3PoolState.ticks(int24).feeGrowthOutside1X128 (flat/OrangeAlphaVaultFlat.sol#75)
Variable IUniswapV3PoolState.positions(bytes32).tokensOwed0 (flat/OrangeAlphaVaultFlat.sol#99) is too similar to IUniswapV3PoolState.positions(bytes32).tokensOwed1 (flat/OrangeAlphaVaultFlat.sol#100)
Variable IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount0Requested (flat/OrangeAlphaVaultFlat.sol#251) is too similar to IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount1Requested (flat/OrangeAlphaVaultFlat.sol#252)
Variable IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount0Requested (flat/OrangeAlphaVaultFlat.sol#454) is too similar to IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount1Requested (flat/OrangeAlphaVaultFlat.sol#455)
Variable IUniswapV3PoolOwnerActions.setFeeProtocol(uint8,uint8).feeProtocol0 (flat/OrangeAlphaVaultFlat.sol#444) is too similar to IUniswapV3PoolOwnerActions.setFeeProtocol(uint8,uint8).feeProtocol1 (flat/OrangeAlphaVaultFlat.sol#444)
Variable IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount0Requested (flat/OrangeAlphaVaultFlat.sol#251) is too similar to IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount1Requested (flat/OrangeAlphaVaultFlat.sol#455)
Variable IUniswapV3PoolOwnerActions.collectProtocol(address,uint128,uint128).amount0Requested (flat/OrangeAlphaVaultFlat.sol#454) is too similar to IUniswapV3PoolActions.collect(address,int24,int24,uint128,uint128).amount1Requested (flat/OrangeAlphaVaultFlat.sol#252)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1764) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1822)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1719) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1765)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1744) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1765)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1719) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1720)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1764) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1720)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1800) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1720)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1744) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1801)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1719) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1822)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1744) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1745)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1821) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1822)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1744) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1822)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1800) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1822)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1800) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1801)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1764) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1765)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1744) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1720)
Variable LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1744) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1841)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1800) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1765)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1800) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1745)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1821) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1765)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1821) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1720)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1840) is too similar to LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1822)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1840) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1801)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1764) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1801)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1719) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1841)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1821) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1745)
Variable LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1800) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1841)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1719) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1801)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1821) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1841)
Variable LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1719) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1745)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1764) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1841)
Variable LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1764) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1745)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1840) is too similar to LiquidityAmounts.getLiquidityForAmounts(uint160,uint160,uint160,uint256,uint256).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1765)
Variable LiquidityAmounts.getAmount1ForLiquidity(uint160,uint160,uint128).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1821) is too similar to LiquidityAmounts.getAmount0ForLiquidity(uint160,uint160,uint128).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1801)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1840) is too similar to LiquidityAmounts.getLiquidityForAmount1(uint160,uint160,uint256).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1745)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1840) is too similar to LiquidityAmounts.getLiquidityForAmount0(uint160,uint160,uint256).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1720)
Variable LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioAX96 (flat/OrangeAlphaVaultFlat.sol#1840) is too similar to LiquidityAmounts.getAmountsForLiquidity(uint160,uint160,uint160,uint128).sqrtRatioBX96 (flat/OrangeAlphaVaultFlat.sol#1841)
Variable IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (flat/OrangeAlphaVaultFlat.sol#3561) is too similar to IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (flat/OrangeAlphaVaultFlat.sol#3562)
Variable IUniswapV3MintCallback.uniswapV3MintCallback(uint256,uint256,bytes).amount0Owed (flat/OrangeAlphaVaultFlat.sol#3582) is too similar to IUniswapV3MintCallback.uniswapV3MintCallback(uint256,uint256,bytes).amount1Owed (flat/OrangeAlphaVaultFlat.sol#3583)
Variable OrangeAlphaVault.MAGIC_SCALE_1E4 (flat/OrangeAlphaVaultFlat.sol#4026) is too similar to OrangeAlphaVault.MAGIC_SCALE_1E8 (flat/OrangeAlphaVaultFlat.sol#4025)
Variable OrangeAlphaVault._depositLiquidityByShares(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._additionalLiquidityAmount0 (flat/OrangeAlphaVaultFlat.sol#4363) is too similar to OrangeAlphaVault._depositLiquidityByShares(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._additionalLiquidityAmount1 (flat/OrangeAlphaVaultFlat.sol#4363)
Variable OrangeAlphaVault._swapAmountOut(bool,uint128,int24)._amount0Delta (flat/OrangeAlphaVaultFlat.sol#4921) is too similar to OrangeAlphaVault._swapAmountOut(bool,uint128,int24)._amount1Delta (flat/OrangeAlphaVaultFlat.sol#4921)
Variable OrangeAlphaVault._swapAmountOut(bool,uint128,int24)._amount0Delta (flat/OrangeAlphaVaultFlat.sol#4921) is too similar to OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._amount1Delta (flat/OrangeAlphaVaultFlat.sol#4418)
Variable OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._amount0Delta (flat/OrangeAlphaVaultFlat.sol#4418) is too similar to OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._amount1Delta (flat/OrangeAlphaVaultFlat.sol#4418)
Variable OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._amount0Delta_scope_0 (flat/OrangeAlphaVaultFlat.sol#4428) is too similar to OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._amount1Delta_scope_1 (flat/OrangeAlphaVaultFlat.sol#4428)
Variable OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._amount0Delta (flat/OrangeAlphaVaultFlat.sol#4418) is too similar to OrangeAlphaVault._swapAmountOut(bool,uint128,int24)._amount1Delta (flat/OrangeAlphaVaultFlat.sol#4921)
Variable OrangeAlphaVault.redeem(uint256,address,address,uint256)._burnedLiquidityAmount0 (flat/OrangeAlphaVaultFlat.sol#4460) is too similar to OrangeAlphaVault.redeem(uint256,address,address,uint256)._burnedLiquidityAmount1 (flat/OrangeAlphaVaultFlat.sol#4460)
Variable OrangeAlphaVault._redeemLiqidityByShares(uint256,uint256,IOrangeAlphaVault.Ticks)._burnedLiquidityAmount0 (flat/OrangeAlphaVaultFlat.sol#4531) is too similar to OrangeAlphaVault._redeemLiqidityByShares(uint256,uint256,IOrangeAlphaVault.Ticks)._burnedLiquidityAmount1 (flat/OrangeAlphaVaultFlat.sol#4531)
Variable OrangeAlphaVault._redeemLiqidityByShares(uint256,uint256,IOrangeAlphaVault.Ticks)._burnedLiquidityAmount0 (flat/OrangeAlphaVaultFlat.sol#4531) is too similar to OrangeAlphaVault.redeem(uint256,address,address,uint256)._burnedLiquidityAmount1 (flat/OrangeAlphaVaultFlat.sol#4460)
Variable OrangeAlphaVault.redeem(uint256,address,address,uint256)._burnedLiquidityAmount0 (flat/OrangeAlphaVaultFlat.sol#4460) is too similar to OrangeAlphaVault._redeemLiqidityByShares(uint256,uint256,IOrangeAlphaVault.Ticks)._burnedLiquidityAmount1 (flat/OrangeAlphaVaultFlat.sol#4531)
Variable OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._surplusAmount0 (flat/OrangeAlphaVaultFlat.sol#4401) is too similar to OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._surplusAmount1 (flat/OrangeAlphaVaultFlat.sol#4402)
Variable OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._targetAmount0 (flat/OrangeAlphaVaultFlat.sol#4396) is too similar to OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._targetAmount1 (flat/OrangeAlphaVaultFlat.sol#4397)
Variable OrangeAlphaVault._addLiquidityInRebalance(int24,int24,uint256,uint256)._targetAmount0 (flat/OrangeAlphaVaultFlat.sol#4754) is too similar to OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._targetAmount1 (flat/OrangeAlphaVaultFlat.sol#4397)
Variable OrangeAlphaVault._swapSurplusAmountInDeposit(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._targetAmount0 (flat/OrangeAlphaVaultFlat.sol#4396) is too similar to OrangeAlphaVault._addLiquidityInRebalance(int24,int24,uint256,uint256)._targetAmount1 (flat/OrangeAlphaVaultFlat.sol#4755)
Variable OrangeAlphaVault._addLiquidityInRebalance(int24,int24,uint256,uint256)._targetAmount0 (flat/OrangeAlphaVaultFlat.sol#4754) is too similar to OrangeAlphaVault._addLiquidityInRebalance(int24,int24,uint256,uint256)._targetAmount1 (flat/OrangeAlphaVaultFlat.sol#4755)
Variable OrangeAlphaVault._depositLiquidityByShares(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._token0Balance (flat/OrangeAlphaVaultFlat.sol#4380) is too similar to OrangeAlphaVault._depositLiquidityByShares(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._token1Balance (flat/OrangeAlphaVaultFlat.sol#4380)
Variable OrangeAlphaVault._computeTargetPositionByShares(uint256,uint256,uint256,uint256,uint256,uint256)._token0Balance (flat/OrangeAlphaVaultFlat.sol#4812) is too similar to OrangeAlphaVault._depositLiquidityByShares(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._token1Balance (flat/OrangeAlphaVaultFlat.sol#4380)
Variable OrangeAlphaVault._depositLiquidityByShares(IOrangeAlphaVault.Balances,uint256,uint256,IOrangeAlphaVault.Ticks)._token0Balance (flat/OrangeAlphaVaultFlat.sol#4380) is too similar to OrangeAlphaVault._computeTargetPositionByShares(uint256,uint256,uint256,uint256,uint256,uint256)._token1Balance (flat/OrangeAlphaVaultFlat.sol#4813)
Variable OrangeAlphaVault._computeTargetPositionByShares(uint256,uint256,uint256,uint256,uint256,uint256)._token0Balance (flat/OrangeAlphaVaultFlat.sol#4812) is too similar to OrangeAlphaVault._computeTargetPositionByShares(uint256,uint256,uint256,uint256,uint256,uint256)._token1Balance (flat/OrangeAlphaVaultFlat.sol#4813)
Variable OrangeAlphaVault._totalAssets(IOrangeAlphaVault.Ticks).amount0Balance (flat/OrangeAlphaVaultFlat.sol#4111-4113) is too similar to OrangeAlphaVault._totalAssets(IOrangeAlphaVault.Ticks).amount1Balance (flat/OrangeAlphaVaultFlat.sol#4114-4116)
Variable OrangeAlphaVault._alignTotalAsset(IOrangeAlphaVault.Ticks,uint256,uint256,uint256,uint256).amount0Balance (flat/OrangeAlphaVaultFlat.sol#4124) is too similar to OrangeAlphaVault._totalAssets(IOrangeAlphaVault.Ticks).amount1Balance (flat/OrangeAlphaVaultFlat.sol#4114-4116)
Variable OrangeAlphaVault.redeem(uint256,address,address,uint256).amount0Delta (flat/OrangeAlphaVaultFlat.sol#4486) is too similar to OrangeAlphaVault.redeem(uint256,address,address,uint256).amount1Delta (flat/OrangeAlphaVaultFlat.sol#4486)
Variable OrangeAlphaVault.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (flat/OrangeAlphaVaultFlat.sol#4998) is too similar to OrangeAlphaVault.redeem(uint256,address,address,uint256).amount1Delta (flat/OrangeAlphaVaultFlat.sol#4486)
Variable OrangeAlphaVault.redeem(uint256,address,address,uint256).amount0Delta (flat/OrangeAlphaVaultFlat.sol#4486) is too similar to IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (flat/OrangeAlphaVaultFlat.sol#3562)
Variable OrangeAlphaVault.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (flat/OrangeAlphaVaultFlat.sol#4998) is too similar to IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (flat/OrangeAlphaVaultFlat.sol#3562)
Variable OrangeAlphaVault.uniswapV3MintCallback(uint256,uint256,bytes).amount0Owed (flat/OrangeAlphaVaultFlat.sol#4972) is too similar to IUniswapV3MintCallback.uniswapV3MintCallback(uint256,uint256,bytes).amount1Owed (flat/OrangeAlphaVaultFlat.sol#3583)
Variable OrangeAlphaVault.uniswapV3MintCallback(uint256,uint256,bytes).amount0Owed (flat/OrangeAlphaVaultFlat.sol#4972) is too similar to OrangeAlphaVault.uniswapV3MintCallback(uint256,uint256,bytes).amount1Owed (flat/OrangeAlphaVaultFlat.sol#4973)
Variable OrangeAlphaVault._alignTotalAsset(IOrangeAlphaVault.Ticks,uint256,uint256,uint256,uint256).amount0Balance (flat/OrangeAlphaVaultFlat.sol#4124) is too similar to OrangeAlphaVault._alignTotalAsset(IOrangeAlphaVault.Ticks,uint256,uint256,uint256,uint256).amount1Balance (flat/OrangeAlphaVaultFlat.sol#4125)
Variable OrangeAlphaVault._totalAssets(IOrangeAlphaVault.Ticks).amount0Balance (flat/OrangeAlphaVaultFlat.sol#4111-4113) is too similar to OrangeAlphaVault._alignTotalAsset(IOrangeAlphaVault.Ticks,uint256,uint256,uint256,uint256).amount1Balance (flat/OrangeAlphaVaultFlat.sol#4125)
Variable IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (flat/OrangeAlphaVaultFlat.sol#3561) is too similar to OrangeAlphaVault.redeem(uint256,address,address,uint256).amount1Delta (flat/OrangeAlphaVaultFlat.sol#4486)
Variable OrangeAlphaVault.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (flat/OrangeAlphaVaultFlat.sol#4998) is too similar to OrangeAlphaVault.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (flat/OrangeAlphaVaultFlat.sol#4999)
Variable OrangeAlphaVault.redeem(uint256,address,address,uint256).amount0Delta (flat/OrangeAlphaVaultFlat.sol#4486) is too similar to OrangeAlphaVault.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (flat/OrangeAlphaVaultFlat.sol#4999)
Variable IUniswapV3SwapCallback.uniswapV3SwapCallback(int256,int256,bytes).amount0Delta (flat/OrangeAlphaVaultFlat.sol#3561) is too similar to OrangeAlphaVault.uniswapV3SwapCallback(int256,int256,bytes).amount1Delta (flat/OrangeAlphaVaultFlat.sol#4999)
Variable IUniswapV3MintCallback.uniswapV3MintCallback(uint256,uint256,bytes).amount0Owed (flat/OrangeAlphaVaultFlat.sol#3582) is too similar to OrangeAlphaVault.uniswapV3MintCallback(uint256,uint256,bytes).amount1Owed (flat/OrangeAlphaVaultFlat.sol#4973)
Variable OrangeAlphaVault._getUnderlyingBalances(IOrangeAlphaVault.Ticks).feeGrowthInside0Last (flat/OrangeAlphaVaultFlat.sol#4165) is too similar to OrangeAlphaVault._getUnderlyingBalances(IOrangeAlphaVault.Ticks).feeGrowthInside1Last (flat/OrangeAlphaVaultFlat.sol#4166)
Variable OrangeAlphaVault.rebalance(int24,int24,int24,int24,uint256,uint128)._targetLiquidity (flat/OrangeAlphaVaultFlat.sol#4651-4656) is too similar to OrangeAlphaVault._addLiquidityInRebalance(int24,int24,uint256,uint256).targetLiquidity_ (flat/OrangeAlphaVaultFlat.sol#4756)
Variable OrangeAlphaVault._getUnderlyingBalances(IOrangeAlphaVault.Ticks).tokensOwed0 (flat/OrangeAlphaVaultFlat.sol#4167) is too similar to OrangeAlphaVault._getUnderlyingBalances(IOrangeAlphaVault.Ticks).tokensOwed1 (flat/OrangeAlphaVaultFlat.sol#4168)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#variable-names-are-too-similar

TickMath.getSqrtRatioAtTick(int24) (flat/OrangeAlphaVaultFlat.sol#1322-1384) uses literals with too many digits:
	- ratio = 0x100000000000000000000000000000000 (flat/OrangeAlphaVaultFlat.sol#1333-1336)
FixedPoint96.slitherConstructorConstantVariables() (flat/OrangeAlphaVaultFlat.sol#1694-1697) uses literals with too many digits:
	- Q96 = 0x1000000000000000000000000 (flat/OrangeAlphaVaultFlat.sol#1696)
OrangeAlphaVault._computeFeesEarned(bool,uint256,uint128,IOrangeAlphaVault.Ticks) (flat/OrangeAlphaVaultFlat.sol#4825-4864) uses literals with too many digits:
	- fee = uint256(liquidity).mulDiv(feeGrowthInside - feeGrowthInsideLast,0x100000000000000000000000000000000) (flat/OrangeAlphaVaultFlat.sol#4862)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

name() should be declared external:
	- ERC20.name() (flat/OrangeAlphaVaultFlat.sol#2082-2084)
symbol() should be declared external:
	- ERC20.symbol() (flat/OrangeAlphaVaultFlat.sol#2090-2092)
decimals() should be declared external:
	- ERC20.decimals() (flat/OrangeAlphaVaultFlat.sol#2107-2109)
	- OrangeAlphaVault.decimals() (flat/OrangeAlphaVaultFlat.sol#4082-4084)
balanceOf(address) should be declared external:
	- ERC20.balanceOf(address) (flat/OrangeAlphaVaultFlat.sol#2121-2123)
transfer(address,uint256) should be declared external:
	- ERC20.transfer(address,uint256) (flat/OrangeAlphaVaultFlat.sol#2133-2137)
approve(address,uint256) should be declared external:
	- ERC20.approve(address,uint256) (flat/OrangeAlphaVaultFlat.sol#2156-2160)
transferFrom(address,address,uint256) should be declared external:
	- ERC20.transferFrom(address,address,uint256) (flat/OrangeAlphaVaultFlat.sol#2178-2187)
increaseAllowance(address,uint256) should be declared external:
	- ERC20.increaseAllowance(address,uint256) (flat/OrangeAlphaVaultFlat.sol#2201-2205)
decreaseAllowance(address,uint256) should be declared external:
	- ERC20.decreaseAllowance(address,uint256) (flat/OrangeAlphaVaultFlat.sol#2221-2230)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
flat/OrangeAlphaVaultFlat.sol analyzed (29 contracts with 78 detectors), 274 result(s) found